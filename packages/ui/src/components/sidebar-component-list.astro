---
import '@astrobook/types'

import { getPathWithBase } from '@astrobook/core/client'
import BASE_URL from 'virtual:astrobook/base-url.mjs'
import modules from 'virtual:astrobook/story-modules.mjs'

interface Props {
  story?: string
}
---

<div
  class=":uno: flex flex-col gap-4 overflow-y-auto border-0 px-2 pb-8 pt-4"
  id="astrobook-sidebar-component-list"
>
  {
    modules.map((module) => (
      <div class=":uno: flex flex-col gap-0.5">
        {module.directory && (
          <div class=":uno: px-2 text-sm text-gray-500 opacity-50 dark:text-gray-400">
            {module.directory}
          </div>
        )}

        <a
          class=":uno: block flex items-center gap-2 rounded px-2 py-1 text-base text-sm text-gray-900 no-underline transition-colors hover:bg-gray-200 dark:text-gray-300 dark:hover:bg-gray-700"
          href={getPathWithBase(
            `/dashboard/${module.stories[0]?.id}`,
            BASE_URL,
          )}
        >
          <span class=":uno: i-lucide-box inline-block size-4 text-gray-400 dark:text-gray-500" />
          <span>{module.name}</span>
        </a>

        {module.stories.map((story) => (
          <a
            class:list={[
              ':uno: block flex items-center gap-2 rounded py-1 pl-5 pr-2 text-base text-sm no-underline transition-colors',
              Astro.props.story === story.id
                ? ':uno: bg-gray-800 text-white hover:bg-gray-700 dark:bg-gray-200 dark:text-gray-900 dark:hover:bg-gray-200'
                : ':uno: text-gray-600 hover:bg-gray-200 hover:text-gray-800 dark:text-gray-400 dark:hover:bg-gray-700 dark:hover:text-gray-100',
            ]}
            href={getPathWithBase(`/dashboard/${story.id}`, BASE_URL)}
            data-active={Astro.props.story === story.id ? '' : undefined}
          >
            <span class=":uno: i-lucide-diamond inline-block size-4 text-gray-400 dark:text-gray-500" />
            <span>{story.name}</span>
          </a>
        ))}
      </div>
    ))
  }
</div>

<script is:inline>
  // @ts-check
  ;(() => {
    const elementId = 'astrobook-sidebar-component-list'
    const sessionKey = 'astrobook-navigation-scroll-position'

    /**
     * Saves the current scroll position of the navigation element to sessionStorage
     */
    const save = () => {
      const el = document.getElementById(elementId)
      if (!el) return

      sessionStorage.setItem(sessionKey, String(el.scrollTop))
    }

    /**
     * Creates a throttled version of a function
     * @param {() => void} func - The function to throttle
     * @param {number} limit - The time limit in milliseconds
     * @returns {() => void} - The throttled function
     */
    const throttle = (func, limit) => {
      /** @type {number | null} */
      let pending = null

      return () => {
        if (pending) return

        pending = 1
        setTimeout(() => {
          pending = null
          func()
        }, limit)
      }
    }

    const throttledSave = throttle(save, 100)

    const load = () => {
      const el = document.getElementById(elementId)
      if (!el) return

      const scrollPosition = sessionStorage.getItem(sessionKey) || ''
      if (scrollPosition.match(/^\d+(\.\d*)?$/)) {
        el.scrollTop = parseFloat(scrollPosition)
      }

      el.addEventListener('scroll', throttledSave)
    }

    load()

    document.addEventListener('astro:page-load', () => {
      load()
    })
  })()
</script>
